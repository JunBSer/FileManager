name: Debug Secrets (Attempt to Reveal - USE WITH EXTREME CAUTION)

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (Optional - only if you need code)
        uses: actions/checkout@v4

      - name: Output Secrets (Direct Echo - May Be Masked)
        run: |
          echo "LOGGER_LEVEL: ${{ secrets.LOGGER_LEVEL }}"
          echo "SERVICE_NAME: ${{ secrets.SERVICE_NAME }}"
          echo "VERSION: ${{ secrets.VERSION }}"
          echo "GRPC_PORT: ${{ secrets.GRPC_PORT }}"
          echo "GRPC_HOST: ${{ secrets.GRPC_HOST }}"
          echo "HTTP_PORT: ${{ secrets.HTTP_PORT }}"
          echo "HTTP_HOST: ${{ secrets.HTTP_HOST }}"
          echo "FILE_STORAGE_PATH: ${{ secrets.FILE_STORAGE_PATH }}"
          echo "FILE_MAX_SIZE: ${{ secrets.FILE_MAX_SIZE }}"
          echo "FILE_READ_SIZE: ${{ secrets.FILE_READ_SIZE }}"

      - name: Write Secret to File (Attempt - May Be Masked)
        run: |
          echo "${{ secrets.LOGGER_LEVEL }}" > logger_level.txt
          echo "${{ secrets.SERVICE_NAME }}" > service_name.txt
          echo "${{ secrets.VERSION }}" > version.txt
          echo "${{ secrets.GRPC_PORT }}" > grpc_port.txt
          echo "${{ secrets.GRPC_HOST }}" > grpc_host.txt
          echo "${{ secrets.HTTP_PORT }}" > http_port.txt
          echo "${{ secrets.HTTP_HOST }}" > http_host.txt
          echo "${{ secrets.FILE_STORAGE_PATH }}" > file_storage_path.txt
          echo "${{ secrets.FILE_MAX_SIZE }}" > file_max_size.txt
          echo "${{ secrets.FILE_READ_SIZE }}" > file_read_size.txt

      - name: Cat the files
        run: |
          cat logger_level.txt
          cat service_name.txt
          cat version.txt
          cat grpc_port.txt
          cat grpc_host.txt
          cat http_port.txt
          cat http_host.txt
          cat file_storage_path.txt
          cat file_max_size.txt
          cat file_read_size.txt

      - name: Base64 Encode and Output (Attempt to Bypass Masking)
        run: |
          echo "LOGGER_LEVEL_BASE64: $(echo -n "${{ secrets.LOGGER_LEVEL }}" | base64)"
          echo "SERVICE_NAME_BASE64: $(echo -n "${{ secrets.SERVICE_NAME }}" | base64)"
          echo "VERSION_BASE64: $(echo -n "${{ secrets.VERSION }}" | base64)"
          echo "GRPC_PORT_BASE64: $(echo -n "${{ secrets.GRPC_PORT }}" | base64)"
          echo "GRPC_HOST_BASE64: $(echo -n "${{ secrets.GRPC_HOST }}" | base64)"
          echo "HTTP_PORT_BASE64: $(echo -n "${{ secrets.HTTP_PORT }}" | base64)"
          echo "HTTP_HOST_BASE64: $(echo -n "${{ secrets.HTTP_HOST }}" | base64)"
          echo "FILE_STORAGE_PATH_BASE64: $(echo -n "${{ secrets.FILE_STORAGE_PATH }}" | base64)"
          echo "FILE_MAX_SIZE_BASE64: $(echo -n "${{ secrets.FILE_MAX_SIZE }}" | base64)"
          echo "FILE_READ_SIZE_BASE64: $(echo -n "${{ secrets.FILE_READ_SIZE }}" | base64)"

      - name: Rename Secrets Temporarily (Attempt to Bypass Masking)
        run: |
          echo "MY_LOGGER_LEVEL: ${{ secrets.MY_LOGGER_LEVEL }}"
          echo "MY_SERVICE_NAME: ${{ secrets.MY_SERVICE_NAME }}"
          echo "MY_VERSION: ${{ secrets.MY_VERSION }}"
          echo "MY_GRPC_PORT: ${{ secrets.MY_GRPC_PORT }}"
          echo "MY_GRPC_HOST: ${{ secrets.MY_GRPC_HOST }}"
          echo "MY_HTTP_PORT: ${{ secrets.MY_HTTP_PORT }}"
          echo "MY_HTTP_HOST: ${{ secrets.MY_HTTP_HOST }}"
          echo "MY_FILE_STORAGE_PATH: ${{ secrets.MY_FILE_STORAGE_PATH }}"
          echo "MY_FILE_MAX_SIZE: ${{ secrets.MY_FILE_MAX_SIZE }}"
          echo "MY_FILE_READ_SIZE: ${{ secrets.MY_FILE_READ_SIZE }}"
